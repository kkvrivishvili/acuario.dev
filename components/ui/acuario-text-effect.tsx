"use client"

import React, { useRef, useEffect, useState } from "react"
import { motion, useAnimation } from "framer-motion"
import { cn } from "@/lib/utils"

interface AcuarioTextEffectProps {
  className?: string
}

let idCounter = 0

export function AcuarioTextEffect({ className }: AcuarioTextEffectProps) {
  const svgRef = useRef<SVGSVGElement>(null)
  const containerRef = useRef<HTMLDivElement>(null)
  const [cursor, setCursor] = useState({ x: 0, y: 0 })
  const [hovered, setHovered] = useState(false)
  const [dimensions, setDimensions] = useState({ width: 0, height: 0 })
  const [isInView, setIsInView] = useState(false)
  const controls = useAnimation()

  const [gradientId] = useState(() => `gradient-${++idCounter}`)
  const [revealMaskId] = useState(() => `reveal-mask-${idCounter}`)

  // Intersection Observer para animaciÃ³n de entrada
  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting && !isInView) {
          setIsInView(true)
          setTimeout(() => {
            controls.start({
              strokeDashoffset: 0,
              transition: {
                duration: 4,
                ease: "easeInOut",
              },
            })
          }, 300)
        }
      },
      {
        threshold: 0.3,
      }
    )

    if (containerRef.current) {
      observer.observe(containerRef.current)
    }

    return () => observer.disconnect()
  }, [controls, isInView])

  useEffect(() => {
    const updateDimensions = () => {
      if (containerRef.current) {
        setDimensions({
          width: containerRef.current.clientWidth,
          height: containerRef.current.clientHeight
        })
      }
    }

    updateDimensions()
    window.addEventListener('resize', updateDimensions)

    return () => {
      window.removeEventListener('resize', updateDimensions)
    }
  }, [])

  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {
    if (containerRef.current) {
      const rect = containerRef.current.getBoundingClientRect()
      setCursor({
        x: e.clientX - rect.left,
        y: e.clientY - rect.top,
      })
    }
  }

  // Paths del logo Acuario
  const allPaths = [
    // ONDA1
    "m0,36.3c-.53-12.92,51.02-13.17,53.67-25.97v12.92C51.02,36.05-.53,36.3,0,49.22v-12.92Z",
    // ONDA2
    "m.22,63.73c-.53-12.82,50.6-13.06,53.24-25.76v12.82C50.82,63.48-.31,63.73.22,76.54v-12.82Z",
    // A
    "m123.42,54.53c-1.52,0-2.63-.28-3.31-.84-.69-.56-1.05-1.32-1.1-2.28l.53-2.51c-.41.66-1.09,1.44-2.06,2.32-.96.89-2.22,1.68-3.77,2.36-1.55.69-3.44,1.03-5.67,1.03-2.39,0-4.63-.5-6.74-1.49-2.11-.99-3.97-2.36-5.6-4.11-1.63-1.75-2.89-3.76-3.81-6.02-.91-2.26-1.37-4.68-1.37-7.27s.46-4.84,1.37-7.04c.91-2.21,2.2-4.18,3.85-5.9,1.65-1.73,3.52-3.08,5.6-4.07,2.08-.99,4.31-1.48,6.7-1.48,2.03,0,3.77.28,5.22.84,1.45.56,2.68,1.26,3.69,2.09,1.01.84,1.85,1.71,2.51,2.63l-.38-2.21c-.05-1.12.28-1.97.99-2.55.71-.58,1.85-.88,3.43-.88,1.37,0,2.37.22,3.01.65.63.43,1.03,1.03,1.18,1.79s.23,1.6.23,2.51v27.8c0,.86-.08,1.65-.23,2.36-.15.71-.55,1.27-1.18,1.68-.64.41-1.66.61-3.08.61Zm-14.01-8.83c1.68,0,3.21-.43,4.61-1.29,1.4-.86,2.5-2.04,3.31-3.54.81-1.5,1.22-3.16,1.22-4.99,0-1.93-.42-3.63-1.26-5.1-.84-1.47-1.97-2.64-3.39-3.5-1.42-.86-2.97-1.29-4.65-1.29-1.88,0-3.55.45-5.03,1.33-1.47.89-2.63,2.08-3.47,3.58-.84,1.5-1.26,3.19-1.26,5.06s.43,3.48,1.29,4.95c.86,1.47,2.04,2.64,3.54,3.5,1.5.86,3.19,1.29,5.06,1.29Z",
    // C
    "m153.5,54.91c-2.39,0-4.74-.43-7.04-1.29-2.31-.86-4.41-2.11-6.28-3.73-1.88-1.62-3.35-3.62-4.42-5.98-1.07-2.36-1.6-5.04-1.6-8.04s.53-5.66,1.6-8c1.07-2.33,2.52-4.31,4.38-5.94s3.92-2.87,6.21-3.73c2.28-.86,4.62-1.29,7.01-1.29,1.83,0,3.53.25,5.1.76,1.57.51,2.94,1.12,4.11,1.83,1.17.71,2.01,1.42,2.51,2.13.71.61,1.29,1.19,1.75,1.75.46.56.61,1.24.46,2.06-.15.51-.38.98-.69,1.41-.3.43-.69.88-1.14,1.33-1.22,1.42-2.44,1.96-3.66,1.6-.66-.35-1.32-.75-1.98-1.18-.66-.43-1.32-.84-1.98-1.22-.66-.38-1.36-.7-2.09-.95-.74-.25-1.54-.38-2.4-.38-1.88,0-3.57.42-5.06,1.26-1.5.84-2.67,1.99-3.5,3.47-.84,1.47-1.26,3.17-1.26,5.1s.42,3.64,1.26,5.14c.84,1.5,1.99,2.67,3.47,3.5,1.47.84,3.12,1.26,4.95,1.26.96,0,1.85-.11,2.67-.34.81-.23,1.55-.53,2.21-.91.66-.38,1.19-.77,1.6-1.18.56-.35,1.07-.69,1.52-.99s.96-.46,1.52-.46,1.14.22,1.75.65c.61.43,1.27,1.1,1.98,2.02.66.76,1.03,1.5,1.1,2.21.08.71-.09,1.4-.49,2.06-.41.66-1.04,1.29-1.9,1.9-.61.56-1.5,1.17-2.67,1.83-1.17.66-2.53,1.22-4.07,1.68-1.55.46-3.19.69-4.91.69Z",
    // U
    "m189.52,54.61c-2.34,0-4.49-.42-6.47-1.26-1.98-.84-3.71-2.04-5.18-3.62-1.47-1.57-2.62-3.45-3.43-5.64-.81-2.18-1.22-4.59-1.22-7.24v-15.16c0-.86.09-1.64.27-2.32.18-.69.6-1.23,1.26-1.64.66-.41,1.68-.61,3.05-.61,1.47,0,2.52.2,3.16.61.63.41,1.03.96,1.18,1.68.15.71.23,1.5.23,2.36v15.08c0,1.83.32,3.4.95,4.72.63,1.32,1.56,2.35,2.78,3.08,1.22.74,2.72,1.1,4.49,1.1s3.38-.37,4.65-1.1c1.27-.74,2.26-1.78,2.97-3.12.71-1.34,1.07-2.91,1.07-4.68v-15.16c0-.86.09-1.65.27-2.36.18-.71.58-1.26,1.22-1.64.63-.38,1.69-.57,3.16-.57s2.44.2,3.05.61c.61.41,1,.96,1.18,1.68.18.71.27,1.5.27,2.36v28.48c0,.76-.09,1.47-.27,2.13-.18.66-.58,1.19-1.22,1.6-.64.41-1.66.61-3.08.61-1.02,0-1.83-.11-2.44-.34s-1.05-.53-1.33-.91c-.28-.38-.46-.77-.53-1.18-.08-.41-.11-.81-.11-1.22l.69-1.98c-.36.41-.84.93-1.45,1.56-.61.64-1.36,1.27-2.25,1.9-.89.64-1.9,1.16-3.05,1.56s-2.43.61-3.85.61Z",
    // A
    "m247.18,54.53c-1.52,0-2.63-.28-3.31-.84-.69-.56-1.05-1.32-1.1-2.28l.53-2.51c-.41.66-1.09,1.44-2.06,2.32-.96.89-2.22,1.68-3.77,2.36-1.55.69-3.44,1.03-5.67,1.03-2.39,0-4.63-.5-6.74-1.49-2.11-.99-3.97-2.36-5.6-4.11-1.63-1.75-2.89-3.76-3.81-6.02-.91-2.26-1.37-4.68-1.37-7.27s.46-4.84,1.37-7.04c.91-2.21,2.2-4.18,3.85-5.9,1.65-1.73,3.52-3.08,5.6-4.07,2.08-.99,4.31-1.48,6.7-1.48,2.03,0,3.77.28,5.22.84,1.45.56,2.68,1.26,3.69,2.09,1.01.84,1.85,1.71,2.51,2.63l-.38-2.21c-.05-1.12.28-1.97.99-2.55.71-.58,1.85-.88,3.43-.88,1.37,0,2.37.22,3.01.65.63.43,1.03,1.03,1.18,1.79s.23,1.6.23,2.51v27.8c0,.86-.08,1.65-.23,2.36-.15.71-.55,1.27-1.18,1.68-.64.41-1.66.61-3.08.61Zm-14.01-8.83c1.68,0,3.21-.43,4.61-1.29,1.4-.86,2.5-2.04,3.31-3.54.81-1.5,1.22-3.16,1.22-4.99,0-1.93-.42-3.63-1.26-5.1-.84-1.47-1.97-2.64-3.39-3.5-1.42-.86-2.97-1.29-4.65-1.29-1.88,0-3.55.45-5.03,1.33-1.47.89-2.63,2.08-3.47,3.58-.84,1.5-1.26,3.19-1.26,5.06s.43,3.48,1.29,4.95c.86,1.47,2.04,2.64,3.54,3.5,1.5.86,3.19,1.29,5.06,1.29Z",
    // R
    "m263.71,54.68c-1.42,0-2.45-.22-3.08-.65-.64-.43-1.03-1-1.18-1.71-.15-.71-.23-1.5-.23-2.36v-28.26c0-.86.09-1.65.27-2.36.18-.71.58-1.26,1.22-1.64.63-.38,1.66-.57,3.08-.57s2.37.18,3.01.53c.63.36,1.04.81,1.22,1.37.18.56.27,1.07.27,1.52l-.61,1.37c.25-.41.61-.9,1.07-1.48.46-.58,1.07-1.17,1.83-1.75.76-.58,1.68-1.07,2.74-1.45,1.07-.38,2.33-.57,3.81-.57.61,0,1.26.06,1.94.19.69.13,1.37.3,2.06.53.69.23,1.31.52,1.87.88.56.36.99.77,1.29,1.26.3.48.46,1.03.46,1.64,0,1.63-.41,3-1.22,4.11-.81,1.12-1.78,1.68-2.89,1.68-.76,0-1.32-.08-1.68-.23-.36-.15-.65-.32-.88-.5-.23-.18-.56-.34-.99-.5-.43-.15-1.1-.23-2.02-.23-.76,0-1.54.13-2.32.38-.79.25-1.51.64-2.17,1.14-.66.51-1.19,1.14-1.6,1.9-.41.76-.61,1.65-.61,2.67v18.51c0,.86-.08,1.64-.23,2.32-.15.69-.56,1.23-1.22,1.64-.66.41-1.73.61-3.2.61Z",
    // I
    "m295.69,9.9c-1.52,0-2.63-.23-3.31-.69-.69-.46-1.12-1.07-1.29-1.83-.18-.76-.27-1.6-.27-2.51s.1-1.74.3-2.48c.2-.74.65-1.32,1.33-1.75.69-.43,1.79-.65,3.31-.65s2.61.23,3.27.69c.66.46,1.09,1.07,1.29,1.83.2.76.3,1.6.3,2.51s-.1,1.74-.3,2.48c-.2.74-.64,1.32-1.29,1.75-.66.43-1.78.65-3.35.65Zm0,44.78c-1.42,0-2.45-.22-3.08-.65-.64-.43-1.03-.99-1.18-1.68-.15-.69-.23-1.46-.23-2.32v-28.26c0-.86.08-1.64.23-2.32s.56-1.23,1.22-1.64c.66-.41,1.7-.61,3.12-.61s2.45.2,3.08.61c.63.41,1.03.96,1.18,1.68.15.71.23,1.52.23,2.44v28.18c0,.86-.08,1.64-.23,2.32-.15.69-.55,1.23-1.18,1.64-.64.41-1.69.61-3.16.61Z",
    // O
    "m326,55.22c-2.39,0-4.75-.48-7.08-1.45-2.34-.96-4.43-2.3-6.28-4-1.85-1.7-3.31-3.73-4.38-6.09s-1.6-4.94-1.6-7.73.5-5.2,1.49-7.54c.99-2.33,2.37-4.39,4.15-6.17s3.82-3.16,6.13-4.15c2.31-.99,4.79-1.48,7.43-1.48,3.6,0,6.85.85,9.75,2.55,2.89,1.7,5.2,4,6.93,6.89,1.73,2.89,2.59,6.17,2.59,9.82,0,2.89-.53,5.53-1.6,7.92-1.07,2.39-2.51,4.43-4.34,6.13-1.83,1.7-3.88,3.01-6.17,3.92-2.29.91-4.62,1.37-7.01,1.37Zm-.15-9.06c1.68,0,3.29-.42,4.84-1.26,1.55-.84,2.82-2.04,3.81-3.62.99-1.57,1.49-3.43,1.49-5.56,0-1.98-.43-3.73-1.29-5.25-.86-1.52-2.07-2.7-3.62-3.54-1.55-.84-3.31-1.26-5.29-1.26-1.83,0-3.5.45-5.03,1.33-1.52.89-2.73,2.09-3.62,3.62-.89,1.52-1.33,3.25-1.33,5.18,0,2.13.48,3.97,1.45,5.52.96,1.55,2.22,2.74,3.77,3.58,1.55.84,3.16,1.26,4.84,1.26Z"
  ]

  return (
    <div
      ref={containerRef}
      className={cn(
        "relative w-full h-[200px] flex items-center justify-center",
        className
      )}
      onMouseMove={handleMouseMove}
      onMouseEnter={() => setHovered(true)}
      onMouseLeave={() => {
        setHovered(false)
        setCursor({ x: 0, y: 0 })
      }}
    >
      <svg
        ref={svgRef}
        width="100%"
        height="100%"
        viewBox="0 0 345.12 76.54"
        preserveAspectRatio="xMidYMid meet"
        xmlns="http://www.w3.org/2000/svg"
        className="select-none"
      >
        <defs>
          <linearGradient
            id={gradientId}
            x1="0"
            y1="0"
            x2="100%"
            y2="0"
            gradientUnits="userSpaceOnUse"
          >
            <stop offset="0%" stopColor="oklch(0.80 0.10 168)" />
            <stop offset="25%" stopColor="oklch(0.85 0.12 168)" />
            <stop offset="50%" stopColor="oklch(0.80 0.10 168)" />
            <stop offset="75%" stopColor="oklch(0.85 0.12 168)" />
            <stop offset="100%" stopColor="oklch(0.80 0.10 168)" />
          </linearGradient>

          <motion.radialGradient
            id={revealMaskId}
            cx={`${(cursor.x / dimensions.width) * 100}%`}
            cy={`${(cursor.y / dimensions.height) * 100}%`}
            r="25%"
            gradientUnits="userSpaceOnUse"
            animate={{
              cx: `${(cursor.x / dimensions.width) * 100}%`,
              cy: `${(cursor.y / dimensions.height) * 100}%`
            }}
            transition={{
              type: "spring",
              bounce: 0,
              duration: 0.3
            }}
          >
            <stop offset="0%" stopColor="white" />
            <stop offset="100%" stopColor="black" />
          </motion.radialGradient>

          <mask id={`mask-${revealMaskId}`}>
            <rect
              x="0"
              y="0"
              width="100%"
              height="100%"
              fill={`url(#${revealMaskId})`}
              style={{ opacity: hovered ? 1 : 0 }}
              className="transition-opacity duration-300"
            />
          </mask>
        </defs>

        {/* Outline layer */}
        <g
          style={{ opacity: hovered ? 0.7 : 0 }}
          className="transition-opacity duration-300"
        >
          {allPaths.map((path, index) => (
            <path
              key={`outline-${index}`}
              d={path}
              className="stroke-neutral-300 dark:stroke-neutral-700"
              strokeWidth="0.5"
              fill="transparent"
            />
          ))}
        </g>

        {/* Animated stroke layer */}
        <motion.g
          fill="transparent"
          strokeWidth="0.5"
          className="stroke-neutral-300 dark:stroke-neutral-700"
          initial={{ strokeDashoffset: 1000, strokeDasharray: 1000 }}
          animate={controls}
        >
          {allPaths.map((path, index) => (
            <path
              key={`animated-${index}`}
              d={path}
            />
          ))}
        </motion.g>

        {/* Gradient reveal layer */}
        <g
          fill="transparent"
          strokeWidth="0.5"
          stroke={`url(#${gradientId})`}
          mask={`url(#mask-${revealMaskId})`}
          style={{ opacity: hovered ? 1 : 0 }}
          className="transition-opacity duration-300"
        >
          {allPaths.map((path, index) => (
            <path
              key={`gradient-${index}`}
              d={path}
            />
          ))}
        </g>
      </svg>
    </div>
  )
}
